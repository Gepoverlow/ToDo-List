{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,sBAAsB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,yBAAyB;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,qBAAqB,qBAAqB;AAC1C,IAAI;AACJ,cAAc,yBAAyB;AACvC;AACA;;AAEA;AACA;AACA,wDAAwD;AACxD;;AAEA,2BAA2B,KAAK,GAAG,GAAG,GAAG,GAAG;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEuE;;;;;;;;;;;;;;;ACzJvE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;;;;AChBzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEiC;;;;;;;UC5CjC;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNA;;AAEkD;AAMxB;AACgC;;AAE1D;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,EAAE,4DAAW;AACb,EAAE,+DAAc;AAChB;AACA;AACA;AACA,CAAC;;AAED;AACA,EAAE,4DAAW;AACb;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,IAAI,+DAAa;AACjB,IAAI,+DAAc;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,IAAI,4DAAU;AACd,IAAI,4DAAW;AACf;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,IAAI,+DAAc;AAClB,IAAI,4DAAW;AACf;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,iBAAiB,2DAAS;AAC1B;AACA,wBAAwB,2DAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU,2DAAS;AACnB;AACA;AACA;AACA;AACA,IAAI,4DAAW;AACf;AACA;AACA;;AAEA;AACA;AACA,yBAAyB,2DAAS;AAClC;AACA,IAAI,+DAAc;AAClB;;AAEA;AACA;AACA,yBAAyB,2DAAS;;AAElC;AACA;AACA;;AAEA;AACA,uBAAuB,2DAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,2DAAS;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,4DAAW;AACf;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2DAAS;AACxB;AACA;AACA;AACA;AACA;AACA,iBAAiB,2DAAS;AAC1B,IAAI,+DAAc;AAClB;AACA;;AAEA;AACA;AACA,IAAI,4DAAW;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI,4DAAW;AACf,IAAI;AACJ;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;AACA,MAAM,4DAAW;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA,kBAAkB,uBAAuB;AACzC;AACA;AACA;;AAEA;AACA;AACA,EAAE,4DAAW;AACb;;AAEA;AACA;AACA;AACA,IAAI,4DAAW;AACf;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH","sources":["webpack://restuarant-page/./src/dom-Creator.js","webpack://restuarant-page/./src/project-Creator.js","webpack://restuarant-page/./src/todo-Creator.js","webpack://restuarant-page/webpack/bootstrap","webpack://restuarant-page/webpack/runtime/define property getters","webpack://restuarant-page/webpack/runtime/hasOwnProperty shorthand","webpack://restuarant-page/webpack/runtime/make namespace object","webpack://restuarant-page/./src/index.js"],"sourcesContent":["let todoUL = document.getElementById(\"todo-ul\");\nlet projectUL = document.getElementById(\"project-ul\");\nlet projectLIs = projectUL.getElementsByClassName(\"li\");\n\nfunction renderTodos(todoArray) {\n  emptyNode(todoUL);\n\n  for (let i = 0; i < todoArray.length; i++) {\n    let todoLI = document.createElement(\"li\");\n    let titleLI = document.createElement(\"p\");\n    let dueDateLI = document.createElement(\"p\");\n    let iconContainer = document.createElement(\"div\");\n    let btnEditTodo = document.createElement(\"span\");\n    let btnDeleteTodo = document.createElement(\"span\");\n    let isChecked = document.createElement(\"span\");\n\n    todoUL.appendChild(todoLI);\n    todoLI.appendChild(titleLI);\n    todoLI.appendChild(dueDateLI);\n    todoLI.appendChild(iconContainer);\n    iconContainer.appendChild(btnEditTodo);\n    iconContainer.appendChild(btnDeleteTodo);\n    iconContainer.appendChild(isChecked);\n\n    todoLI.id = todoArray[i].id;\n    titleLI.textContent = todoArray[i].title;\n    dueDateLI.textContent = checkDueDate(todoArray[i].dueDate);\n    btnEditTodo.textContent = \"visibility\";\n    btnDeleteTodo.textContent = \"delete\";\n\n    iconContainer.className = \"container-icons\";\n    btnDeleteTodo.className = \"material-icons-outlined\";\n    btnEditTodo.className = \"material-icons-outlined\";\n    isChecked.className = \"material-icons-outlined\";\n\n    if (todoArray[i].isChecked === true) {\n      isChecked.textContent = \"check\";\n    } else if (todoArray[i].isChecked === false) {\n      isChecked.textContent = \"pending_actions\";\n    }\n\n    if (todoArray[i].priority === \"0\") {\n      todoLI.style.backgroundColor = \"#99ff99\";\n    } else if (todoArray[i].priority === \"1\") {\n      todoLI.style.backgroundColor = \"#adadeb\";\n    } else if (todoArray[i].priority === \"2\") {\n      todoLI.style.backgroundColor = \"#ff8080\";\n    }\n  }\n}\n\nfunction renderProjects(projectArray) {\n  emptyNode(projectUL);\n\n  for (let i = 0; i < projectArray.length; i++) {\n    let projectLI = document.createElement(\"li\");\n    let projectP = document.createElement(\"p\");\n    let projectDeleteBtn = document.createElement(\"span\");\n\n    projectP.textContent = projectArray[i].name;\n    projectDeleteBtn.textContent = \"delete\";\n\n    projectDeleteBtn.className = \"material-icons-outlined\";\n    projectLI.id = projectArray[i].id;\n    projectLI.classList.add(\"li\");\n\n    projectUL.appendChild(projectLI);\n    projectLI.appendChild(projectP);\n    projectLI.appendChild(projectDeleteBtn);\n  }\n\n  //GIVE THE LAST ITEM OF THE NODELIST THE ACTIVE STYLE\n  updateActiveProject(projectLIs.length - 1);\n}\n\nfunction renderTodoInfo(array, index) {\n  let titleInput = document.getElementById(\"input-title-edit\");\n  let descriptionInput = document.getElementById(\"input-description-edit\");\n  let dueDateInput = document.getElementById(\"input-due-date-edit\");\n  let priorityInput = document.getElementById(\"input-priority-edit\");\n  let notesInput = document.getElementById(\"input-notes-edit\");\n\n  titleInput.value = array[index].title;\n  descriptionInput.value = array[index].description;\n  priorityInput.value = array[index].priority;\n  notesInput.value = array[index].notes;\n\n  if (typeof array[index].dueDate === \"string\") {\n    dueDateInput.value = transformFromString(array[index].dueDate);\n  } else if (typeof array[index].dueDate === \"object\") {\n    dueDateInput.value = transformFromObj(array[index].dueDate);\n  }\n}\n\nfunction submitEditTodo(array, index) {\n  let titleInput = document.getElementById(\"input-title-edit\");\n  let descriptionInput = document.getElementById(\"input-description-edit\");\n  let dueDateInput = document.getElementById(\"input-due-date-edit\");\n  let priorityInput = document.getElementById(\"input-priority-edit\");\n  let notesInput = document.getElementById(\"input-notes-edit\");\n\n  array[index].title = titleInput.value;\n  array[index].description = descriptionInput.value;\n  array[index].dueDate = dueDateInput.value;\n  array[index].priority = priorityInput.value;\n  array[index].notes = notesInput.value;\n}\n\nfunction updateActiveProject(index) {\n  let projectLIs = projectUL.getElementsByClassName(\"li\");\n  let lastProject = projectLIs[index];\n  if (projectLIs.length > 0) {\n    lastProject.classList.add(\"active\");\n  }\n}\n\nfunction emptyNode(node) {\n  while (node.lastElementChild) {\n    node.removeChild(node.lastElementChild);\n  }\n}\n\nfunction checkDueDate(value) {\n  let dateToday = new Date();\n  let dateInputted = new Date(value);\n\n  let diffTime = Math.abs(dateInputted - dateToday);\n  let diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\n  if (dateToday > dateInputted && diffDays === 1) {\n    return `due today!`;\n  } else if (dateToday < dateInputted) {\n    return `due in ${diffDays.toString()} days`;\n  } else if (dateToday > dateInputted) {\n    return `${diffDays.toString() - 1} days overdue`;\n  }\n}\n\nfunction transformFromObj(obj) {\n  let dd = String(obj.getDate()).padStart(2, \"0\");\n  let mm = String(obj.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n  let yyyy = obj.getFullYear();\n\n  let transformedDate = `${yyyy}-${mm}-${dd}`;\n  console.log(transformedDate);\n  return transformedDate;\n}\n\nfunction transformFromString(str) {\n  let transformedDate = str.slice(0, 10);\n  return transformedDate;\n}\n\nexport { renderTodos, renderProjects, renderTodoInfo, submitEditTodo };\n","class Project {\n  constructor(name) {\n    this.id = Date.now();\n    this.name = name;\n    this.todos = [];\n  }\n}\n\nfunction createProject(mainArray) {\n  //CREATE THE PROJECT\n  let projectInput = document.getElementById(\"project-input\");\n  let project = new Project(projectInput.value);\n  mainArray.push(project);\n  projectInput.value = \"\";\n}\n\nexport { createProject };\n","class Todo {\n  constructor(title, description, dueDate, priority, notes, isChecked) {\n    this.id = Date.now();\n    this.title = title;\n    this.description = description;\n    this.dueDate = dueDate;\n    this.priority = priority;\n    this.notes = notes;\n    this.isChecked = isChecked;\n  }\n}\n\nfunction createTodo(currentArr, defProject) {\n  let titleInput = document.getElementById(\"input-title-add\").value;\n  let descriptionInput = document.getElementById(\"input-description-add\").value;\n  let dueDateInput = new Date(\n    document.getElementById(\"input-due-date-add\").value\n  );\n  let priorityInput = document.getElementById(\"input-priority-add\").value;\n  let notesInput = document.getElementById(\"input-notes-add\").value;\n  //\n  let todo = new Todo(\n    titleInput,\n    descriptionInput,\n    dueDateInput,\n    priorityInput,\n    notesInput,\n    false\n  );\n  currentArr.push(todo);\n  if (currentArr !== defProject) {\n    defProject.push(todo);\n  }\n}\n\nfunction findIndex(arr, target) {\n  let pos = arr\n    .map(function (e) {\n      return e.id;\n    })\n    .indexOf(parseInt(target));\n  return pos;\n}\n\nexport { createTodo, findIndex };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//FRESH START //FRESH START //FRESH START //FRESH START //FRESH START //FRESH START//FRESH START//FRESH START//FRESH START\n\nimport { createProject } from \"./project-Creator\";\nimport {\n  renderTodos,\n  renderProjects,\n  renderTodoInfo,\n  submitEditTodo,\n} from \"./dom-Creator.js\";\nimport { createTodo, findIndex } from \"./todo-Creator.js\";\n\nlet projectUL = document.getElementById(\"project-ul\");\nlet todoUL = document.getElementById(\"todo-ul\");\nlet btnAddToDo = document.getElementById(\"btn-add-todo\");\n\nlet todoFormAdd = document.getElementById(\"todo-form-add\");\nlet btnSubmitAdd = document.getElementById(\"btn-submit-add\");\nlet btnCancelAdd = document.getElementById(\"btn-cancel-add\");\n\nlet todoFormEdit = document.getElementById(\"todo-form-edit\");\nlet btnSubmitEdit = document.getElementById(\"btn-submit-edit\");\nlet btnCancelEdit = document.getElementById(\"btn-cancel-edit\");\n\nlet btnAddProject = document.getElementById(\"btn-add-project\");\nlet inputAddProject = document.getElementById(\"project-input\");\nlet iProject = document.getElementById(\"inbox\");\nlet sortBtn = document.getElementById(\"sort\");\n\nlet inboxProject = {\n  id: \"defaultID\",\n  name: \"Inbox\",\n  todos: [],\n};\n\nlet projects = [];\n\nlet currentProject = undefined;\nlet defProject = undefined;\nlet indexOfClickedTodo = undefined;\n\n// EVENT LISTENERS\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  inboxProject.todos = getStorageData(\"inboxArray\");\n  projects = getStorageData(\"projectsArray\");\n\n  defProject = inboxProject.todos;\n  currentProject = defProject;\n\n  renderTodos(defProject);\n  renderProjects(projects);\n  enableProjectNavigation();\n  removeActiveStatusOnProjects();\n  iProject.classList.add(\"active\");\n});\n\niProject.addEventListener(\"click\", function () {\n  renderTodos(defProject);\n  currentProject = defProject;\n  removeActiveStatusOnProjects();\n  iProject.classList.add(\"active\");\n});\n\nbtnAddToDo.addEventListener(\"click\", () => {\n  if (todoFormEdit.classList.contains(\"hidden\")) {\n    todoFormAdd.classList.remove(\"hidden\");\n  }\n});\n\nbtnAddProject.addEventListener(\"click\", () => {\n  if (inputAddProject.value !== \"\") {\n    createProject(projects);\n    renderProjects(projects);\n    enableProjectNavigation();\n    giveAddedProjectActiveStatus();\n    addToLocalStorage(\"projectsArray\", projects);\n    addToLocalStorage(\"inboxArray\", defProject);\n    iProject.classList.remove(\"active\");\n    todoFormAdd.classList.add(\"hidden\");\n    todoFormEdit.classList.add(\"hidden\");\n  }\n});\n\nbtnSubmitAdd.addEventListener(\"click\", (ev) => {\n  if (todoFormAdd.checkValidity()) {\n    ev.preventDefault();\n    createTodo(currentProject, defProject);\n    renderTodos(currentProject);\n    todoFormAdd.reset();\n    todoFormAdd.classList.add(\"hidden\");\n    addToLocalStorage(\"projectsArray\", projects);\n    addToLocalStorage(\"inboxArray\", defProject);\n  }\n});\n\nbtnCancelAdd.addEventListener(\"click\", (ev) => {\n  ev.preventDefault();\n  todoFormAdd.classList.add(\"hidden\");\n});\n\nbtnSubmitEdit.addEventListener(\"click\", (ev) => {\n  if (todoFormEdit.checkValidity()) {\n    ev.preventDefault();\n    todoFormEdit.classList.add(\"hidden\");\n    submitEditTodo(currentProject, indexOfClickedTodo);\n    renderTodos(currentProject);\n    addToLocalStorage(\"projectsArray\", projects);\n    addToLocalStorage(\"inboxArray\", defProject);\n  }\n});\n\nbtnCancelEdit.addEventListener(\"click\", (ev) => {\n  ev.preventDefault();\n  todoFormEdit.classList.add(\"hidden\");\n});\n\nsortBtn.addEventListener(\"click\", () => {\n  console.log(defProject);\n  sortDates(defProject);\n  console.log(defProject);\n});\n\ntodoUL.addEventListener(\"click\", function (e) {\n  // DELETE\n  function deleteTodo(array) {\n    array.splice(findIndex(currentProject, e.target.parentNode.id), 1);\n    if (currentProject !== defProject) {\n      defProject.splice(findIndex(defProject, e.target.parentNode.id), 1);\n    }\n    if (currentProject === defProject) {\n      let projectOfRepeatedTodo = projects.filter((project) =>\n        project.todos.some(\n          (todo) => todo.id === parseInt(e.target.parentNode.id)\n        )\n      )[0];\n      if (projectOfRepeatedTodo !== undefined) {\n        projectOfRepeatedTodo.todos.splice(\n          findIndex(projectOfRepeatedTodo.todos, e.target.parentNode.id),\n          1\n        );\n      }\n    }\n    renderTodos(currentProject);\n    addToLocalStorage(\"projectsArray\", projects);\n    addToLocalStorage(\"inboxArray\", defProject);\n  }\n\n  //EDIT\n  function openEditForm() {\n    indexOfClickedTodo = findIndex(currentProject, e.target.parentNode.id);\n    todoFormEdit.classList.remove(\"hidden\");\n    renderTodoInfo(currentProject, indexOfClickedTodo);\n  }\n\n  //CHANGE CHECKED STATUS\n  function changeCheckedStatus(array) {\n    indexOfClickedTodo = findIndex(currentProject, e.target.parentNode.id);\n\n    array[indexOfClickedTodo].isChecked = array[indexOfClickedTodo].isChecked\n      ? false\n      : true;\n\n    if (currentProject !== defProject) {\n      let inboxIndex = findIndex(defProject, e.target.parentNode.id);\n      console.log(inboxIndex);\n      defProject[inboxIndex].isChecked = array[indexOfClickedTodo].isChecked\n        ? true\n        : false;\n    }\n    if (currentProject === defProject) {\n      let projectOfRepeatedTodo = projects.filter((project) =>\n        project.todos.some(\n          (todo) => todo.id === parseInt(e.target.parentNode.id)\n        )\n      )[0];\n      if (projectOfRepeatedTodo !== undefined) {\n        let repeatedTodoIndex = findIndex(\n          projectOfRepeatedTodo.todos,\n          e.target.parentNode.id\n        );\n        projectOfRepeatedTodo.todos[repeatedTodoIndex].isChecked = defProject[\n          indexOfClickedTodo\n        ].isChecked\n          ? true\n          : false;\n      }\n    }\n  }\n\n  //\n\n  if (\n    e.target.textContent === \"check\" ||\n    e.target.textContent === \"pending_actions\"\n  ) {\n    changeCheckedStatus(currentProject);\n    addToLocalStorage(\"projectsArray\", projects);\n    addToLocalStorage(\"inboxArray\", defProject);\n    renderTodos(currentProject);\n  }\n\n  if (e.target.textContent === \"delete\") {\n    deleteTodo(currentProject);\n  }\n\n  if (\n    e.target.textContent === \"visibility\" &&\n    todoFormAdd.classList.contains(\"hidden\")\n  ) {\n    openEditForm();\n  }\n});\n\nprojectUL.addEventListener(\"click\", function (e) {\n  todoFormAdd.classList.add(\"hidden\");\n  todoFormEdit.classList.add(\"hidden\");\n  // DELETE\n  function deleteProject(array) {\n    let deletedProject =\n      projects[findIndex(projects, e.target.parentNode.id)].todos;\n    inboxProject.todos = inboxProject.todos.filter(\n      (i) => !deletedProject.includes(i)\n    );\n    defProject = inboxProject.todos;\n    //\n    array.splice(findIndex(projects, e.target.parentNode.id), 1);\n    renderProjects(projects);\n    enableProjectNavigation();\n  }\n\n  if (e.target.textContent === \"delete\") {\n    deleteProject(projects);\n    renderTodos(currentProject);\n    giveLastProjectActiveStatus();\n    addToLocalStorage(\"projectsArray\", projects);\n    addToLocalStorage(\"inboxArray\", defProject);\n  }\n\n  if (projects.length < 1) {\n    iProject.classList.add(\"active\");\n    currentProject = defProject;\n    renderTodos(currentProject);\n  } else if (projects.length >= 1) {\n    iProject.classList.remove(\"active\");\n  }\n});\n\nfunction enableProjectNavigation() {\n  // Get all buttons with class=\"li\" inside the container\n  let projectLIs = projectUL.getElementsByClassName(\"li\");\n\n  // Loop through the buttons and add the active class to the current/clicked button\n  for (let i = 0; i < projectLIs.length; i++) {\n    projectLIs[i].addEventListener(\"click\", function () {\n      let current = document.getElementsByClassName(\"active\");\n      currentProject = projects[i].todos;\n      renderTodos(currentProject);\n      // If there's no active class\n      if (current.length > 0) {\n        current[0].className = current[0].className.replace(\" active\", \"\");\n      }\n\n      // Add the active class to the current/clicked button\n      this.className += \" active\";\n    });\n  }\n}\n\nfunction removeActiveStatusOnProjects() {\n  let projectLIs = projectUL.getElementsByClassName(\"li\");\n  for (let i = 0; i < projectLIs.length; i++) {\n    projectLIs[i].classList.remove(\"active\");\n  }\n}\n\nfunction giveAddedProjectActiveStatus() {\n  currentProject = projects[projects.length - 1].todos;\n  renderTodos(currentProject);\n}\n\nfunction giveLastProjectActiveStatus() {\n  if (projects.length > 0) {\n    currentProject = projects[projects.length - 1].todos;\n    renderTodos(currentProject);\n  }\n}\n\nfunction addToLocalStorage(name, arr) {\n  localStorage.setItem(name, JSON.stringify(arr));\n}\n\nfunction getStorageData(name) {\n  return JSON.parse(localStorage.getItem(name) || \"[]\");\n}\n\nfunction sortDates(defArray) {\n  defArray.sort(function compare(a, b) {\n    let dateA = new Date(a.dueDate);\n    let dateB = new Date(b.dueDate);\n    return dateA - dateB;\n  });\n}\n"],"names":[],"sourceRoot":""}